[{"/Users/Sosi/workspace/kandykorner/src/index.js":"1","/Users/Sosi/workspace/kandykorner/src/App.js":"2","/Users/Sosi/workspace/kandykorner/src/reportWebVitals.js":"3","/Users/Sosi/workspace/kandykorner/src/components/KandyKorner.js":"4","/Users/Sosi/workspace/kandykorner/src/components/ApplicationViews.js":"5","/Users/Sosi/workspace/kandykorner/src/components/nav/NavBar.js":"6","/Users/Sosi/workspace/kandykorner/src/components/product/ProductProvider.js":"7","/Users/Sosi/workspace/kandykorner/src/components/product/ProductList.js":"8","/Users/Sosi/workspace/kandykorner/src/components/product/ProductCard.js":"9","/Users/Sosi/workspace/kandykorner/src/components/Home.js":"10","/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeProvider.js":"11","/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeList.js":"12","/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeForm.js":"13","/Users/Sosi/workspace/kandykorner/src/components/location/LocationList.js":"14","/Users/Sosi/workspace/kandykorner/src/components/location/LocationCard.js":"15","/Users/Sosi/workspace/kandykorner/src/components/location/LocationProvider.js":"16","/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeCard.js":"17"},{"size":629,"mtime":1611787978567,"results":"18","hashOfConfig":"19"},{"size":528,"mtime":1611179093588,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611179093608,"results":"21","hashOfConfig":"19"},{"size":246,"mtime":1611852805347,"results":"22","hashOfConfig":"19"},{"size":1768,"mtime":1611858370680,"results":"23","hashOfConfig":"19"},{"size":1035,"mtime":1611852805349,"results":"24","hashOfConfig":"19"},{"size":1707,"mtime":1611855101526,"results":"25","hashOfConfig":"19"},{"size":1275,"mtime":1611856261602,"results":"26","hashOfConfig":"19"},{"size":294,"mtime":1611855344757,"results":"27","hashOfConfig":"19"},{"size":316,"mtime":1611852805339,"results":"28","hashOfConfig":"19"},{"size":1740,"mtime":1611857430651,"results":"29","hashOfConfig":"19"},{"size":1040,"mtime":1611858511239,"results":"30","hashOfConfig":"19"},{"size":4191,"mtime":1611857860680,"results":"31","hashOfConfig":"19"},{"size":1242,"mtime":1611856315659,"results":"32","hashOfConfig":"19"},{"size":314,"mtime":1611857533413,"results":"33","hashOfConfig":"19"},{"size":1709,"mtime":1611856805369,"results":"34","hashOfConfig":"19"},{"size":292,"mtime":1611857631423,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1437lum",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/Sosi/workspace/kandykorner/src/index.js",[],["75","76"],"/Users/Sosi/workspace/kandykorner/src/App.js",[],["77","78"],"/Users/Sosi/workspace/kandykorner/src/reportWebVitals.js",[],"/Users/Sosi/workspace/kandykorner/src/components/KandyKorner.js",[],"/Users/Sosi/workspace/kandykorner/src/components/ApplicationViews.js",[],"/Users/Sosi/workspace/kandykorner/src/components/nav/NavBar.js",[],"/Users/Sosi/workspace/kandykorner/src/components/product/ProductProvider.js",[],"/Users/Sosi/workspace/kandykorner/src/components/product/ProductList.js",["79"],"import React, { useContext, useEffect } from \"react\"\n//The useContext hook allows us to use data structures and functions that a parent provider component exposes\n//To start, we need to import the context object we created in the provider component so that the Context hook can access the objects it exposes\n//The useEffect hook allows the component to reach out into the world for anything that cannot be handled during render. \n//In this case, it is the API call for the products.\n// import { useHistory } from \"react-router-dom\"\nimport { ProductContext } from \"./ProductProvider\"\nimport { ProductCard } from \"./ProductCard\"\nimport \"./Product.css\"\n\nexport const ProductList = () => {\n    // This state changes when `getProducts()` is invoked below\n    const { products, getProducts } = useContext(ProductContext)\n  \n    //useEffect - reach out to the world for something out of the react app\n    useEffect(() => {\n      console.log(\"ProductList: useEffect - getProducts\")\n      getProducts()\n    }, [])\n  \n  \n    return (\n      <div className=\"products\">\n        {console.log(\"ProducList: Render\", products)}\n      {\n        products.map(product => {\n          return <ProductCard key={product.id} \n              product={product} />\n        })\n      }\n    </div>\n    )\n  }","/Users/Sosi/workspace/kandykorner/src/components/product/ProductCard.js",[],"/Users/Sosi/workspace/kandykorner/src/components/Home.js",[],"/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeProvider.js",[],"/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeList.js",["80"],"/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeForm.js",["81","82"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { LocationContext } from \"../location/LocationProvider\"\nimport { EmployeeContext } from \"../employee/EmployeeProvider\"\nimport { useHistory } from 'react-router-dom';\n\nexport const EmployeeForm = () => {\n    const { addEmployee } = useContext(EmployeeContext)\n    const { locations, getLocations } = useContext(LocationContext)\n\n    /*\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props.\n\n    Define the intial state of the form inputs with useState()\n    */\n\n    const [employee, setEmployee] = useState({\n      name: \"\",\n      address: \"\",\n      squareFootage: 0,\n      locationsId: 0\n    });\n\n    const history = useHistory();\n\n    /*\n    Reach out to the world and get customers state\n    and locations state on initialization, so we can provide their data in the form drop downs\n    */\n    // useEffect(() => {\n    //   getCustomers().then(getLocations)\n    // }, [])\n\n    //when a field changes, update state. The return will re-render and display based on the values in state\n        // NOTE! What's happening in this function can be very difficult to grasp. Read it over many times and ask a lot questions about it.\n    //Controlled component\n    const handleControlledInputChange = (event) => {\n      /* When changing a state object or array,\n      always create a copy, make changes, and then set state.*/\n      const newEmployee = { ...employee }\n      let selectedVal = event.target.value\n      // forms always provide values as strings. But we want to save the ids as numbers. This will cover both customer and location ids\n      if (event.target.id.includes(\"Id\")) {\n        selectedVal = parseInt(selectedVal)\n      }\n      /* Employee is an object with properties.\n      Set the property to the new value\n      using object bracket notation. */\n      newEmployee[event.target.id] = selectedVal\n      // update state\n      setEmployee(newEmployee)\n    }\n\n    const handleClickSaveEmployee = (event) => {\n      event.preventDefault() //Prevents the browser from submitting the form\n\n      const locationId = employee.locationId\n\n      if (locationId === 0) {\n        window.alert(\"Please select a location\")\n      } else {\n        //invoke addEmployee passing Employee as an argument.\n        //once complete, change the url and display the Employee list\n        addEmployee(employee)\n        .then(() => history.push(\"/employees\"))\n      }\n    }\n\n    return (\n      <form className=\"employeeForm\">\n          <h2 className=\"employeeForm__title\">New Employee</h2>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"address\">Employee address:</label>\n                  <input type=\"text\" id=\"address\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Employee address\" value={employee.address}/>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"squareFootage\">Employee squareFootage:</label>\n                  <input type=\"text\" id=\"squareFootage\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Employee squareFootage\" value={employee.squareFootage}/>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"location\">Assign to location: </label>\n                  <select defaultValue={employee.locationsId} name=\"locationsId\" id=\"locationsId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                      <option value=\"0\">Select a location</option>\n                      {locations.map(l => (\n                          <option key={l.id} value={l.id}>\n                              {l.name}\n                          </option>\n                      ))}\n                  </select>\n              </div>\n          </fieldset>\n\n          <button className=\"btn btn-primary\"\n            onClick={handleClickSaveEmployee}>\n            Save Employee\n          </button>\n      </form>\n    )\n}","/Users/Sosi/workspace/kandykorner/src/components/location/LocationList.js",["83"],"import React, { useContext, useEffect } from \"react\"\n//The useContext hook allows us to use data structures and functions that a parent provider component exposes\n//To start, we need to import the context object we created in the provider component so that the Context hook can access the objects it exposes\n//The useEffect hook allows the component to reach out into the world for anything that cannot be handled during render. \n//In this case, it is the API call for the locations.\n// import { useHistory } from \"react-router-dom\"\nimport { LocationContext } from \"./LocationProvider\"\nimport { LocationCard } from \"./LocationCard\"\nimport \"./Location.css\"\n\nexport const LocationList = () => {\n    // This state changes when `getLocations()` is invoked below\n    const { locations, getLocations } = useContext(LocationContext)\n  \n    //useEffect - reach out to the world for something out of the react app\n    useEffect(() => {\n      console.log(\"LocationList: useEffect - getLocations\")\n      getLocations()\n    }, [])\n  \n  \n    return (\n      <div className=\"locations\">\n      {\n        locations.map(location => {\n          return <LocationCard key={location.id} \n              location={location} />\n        })\n      }\n    </div>\n    )\n  }","/Users/Sosi/workspace/kandykorner/src/components/location/LocationCard.js",[],"/Users/Sosi/workspace/kandykorner/src/components/location/LocationProvider.js",[],"/Users/Sosi/workspace/kandykorner/src/components/employee/EmployeeCard.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":19,"column":8,"nodeType":"92","endLine":19,"endColumn":10,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":15,"column":10,"nodeType":"92","endLine":15,"endColumn":12,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":29,"nodeType":"98","messageId":"99","endLine":1,"endColumn":38},{"ruleId":"96","severity":1,"message":"100","line":8,"column":24,"nodeType":"98","messageId":"99","endLine":8,"endColumn":36},{"ruleId":"90","severity":1,"message":"101","line":19,"column":8,"nodeType":"92","endLine":19,"endColumn":10,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getLocations' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [getProducts]",{"range":"114","text":"115"},"Update the dependencies array to be: [getEmployees]",{"range":"116","text":"117"},"Update the dependencies array to be: [getLocations]",{"range":"118","text":"119"},[1001,1003],"[getProducts]",[668,670],"[getEmployees]",[1015,1017],"[getLocations]"]